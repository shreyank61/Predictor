{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\SHREYANK\\\\DJ\\\\chatapp\\\\frontend\\\\src\\\\components\\\\DiabeticPredictionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiabeticPredictionForm() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    age: '',\n    bs_fast: '',\n    bs_pp: '',\n    plasma_r: '',\n    plasma_f: '',\n    hbA1c: ''\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // üîê Redirect to login if token is missing\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    }\n  }, [navigate]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (loading) return;\n    setError(null);\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://127.0.0.1:8000/acc/predict/', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.Error === '0') {\n        // üîÅ Redirect to result page with state\n        navigate('/diabetic-result', {\n          state: {\n            input: formData,\n            result: response.data\n          }\n        });\n      } else {\n        setError(response.data.Message || 'Prediction failed.');\n      }\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        setError('Unauthorized. Please log in again.');\n        navigate('/login');\n      } else {\n        setError('Prediction failed. Please check the input or server.');\n      }\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center vh-100\",\n    style: {\n      background: '#e3f2fd'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 rounded-4 shadow-sm\",\n      style: {\n        background: '#ffffff',\n        width: '100%',\n        maxWidth: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center fw-bold mb-3\",\n        style: {\n          color: '#0d47a1'\n        },\n        children: \"\\uD83E\\uDE7A Diabetic Type Predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [[{\n          label: \"Age\",\n          name: \"age\"\n        }, {\n          label: \"BS Fast\",\n          name: \"bs_fast\"\n        }, {\n          label: \"BS PP\",\n          name: \"bs_pp\"\n        }, {\n          label: \"Plasma Random\",\n          name: \"plasma_r\"\n        }, {\n          label: \"Plasma Fasting\",\n          name: \"plasma_f\"\n        }, {\n          label: \"HbA1c\",\n          name: \"hbA1c\"\n        }].map(({\n          label,\n          name\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"any\",\n            className: \"form-control\",\n            id: name,\n            name: name,\n            placeholder: label,\n            value: formData[name],\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: name,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn w-100 fw-bold mt-2\",\n          style: {\n            backgroundColor: '#1565c0',\n            color: 'white'\n          },\n          children: loading ? '‚è≥ Predicting...' : 'üöÄ Predict'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: [\"\\u274C \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(DiabeticPredictionForm, \"ilCVBKnfyjokKtvUTafJ9OXZt+I=\", false, function () {\n  return [useNavigate];\n});\n_c = DiabeticPredictionForm;\nexport default DiabeticPredictionForm;\nvar _c;\n$RefreshReg$(_c, \"DiabeticPredictionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","DiabeticPredictionForm","_s","navigate","formData","setFormData","age","bs_fast","bs_pp","plasma_r","plasma_f","hbA1c","error","setError","loading","setLoading","token","localStorage","getItem","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","headers","Authorization","data","Error","state","input","result","Message","err","_err$response","status","className","style","background","children","width","maxWidth","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","map","type","step","id","placeholder","onChange","required","htmlFor","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/shrey/SHREYANK/DJ/chatapp/frontend/src/components/DiabeticPredictionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction DiabeticPredictionForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    age: '',\r\n    bs_fast: '',\r\n    bs_pp: '',\r\n    plasma_r: '',\r\n    plasma_f: '',\r\n    hbA1c: ''\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // üîê Redirect to login if token is missing\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (loading) return;\r\n\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://127.0.0.1:8000/acc/predict/',\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.data.Error === '0') {\r\n        // üîÅ Redirect to result page with state\r\n        navigate('/diabetic-result', {\r\n          state: {\r\n            input: formData,\r\n            result: response.data\r\n          }\r\n        });\r\n      } else {\r\n        setError(response.data.Message || 'Prediction failed.');\r\n      }\r\n\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        setError('Unauthorized. Please log in again.');\r\n        navigate('/login');\r\n      } else {\r\n        setError('Prediction failed. Please check the input or server.');\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center vh-100\" style={{ background: '#e3f2fd' }}>\r\n      <div className=\"p-4 rounded-4 shadow-sm\" style={{ background: '#ffffff', width: '100%', maxWidth: '400px' }}>\r\n        <h3 className=\"text-center fw-bold mb-3\" style={{ color: '#0d47a1' }}>ü©∫ Diabetic Type Predictor</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          {[{ label: \"Age\", name: \"age\" },\r\n            { label: \"BS Fast\", name: \"bs_fast\" },\r\n            { label: \"BS PP\", name: \"bs_pp\" },\r\n            { label: \"Plasma Random\", name: \"plasma_r\" },\r\n            { label: \"Plasma Fasting\", name: \"plasma_f\" },\r\n            { label: \"HbA1c\", name: \"hbA1c\" }\r\n          ].map(({ label, name }) => (\r\n            <div className=\"form-floating mb-2\" key={name}>\r\n              <input\r\n                type=\"number\"\r\n                step=\"any\"\r\n                className=\"form-control\"\r\n                id={name}\r\n                name={name}\r\n                placeholder={label}\r\n                value={formData[name]}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <label htmlFor={name}>{label}</label>\r\n            </div>\r\n          ))}\r\n\r\n          <button type=\"submit\" className=\"btn w-100 fw-bold mt-2\" style={{ backgroundColor: '#1565c0', color: 'white' }}>\r\n            {loading ? '‚è≥ Predicting...' : 'üöÄ Predict'}\r\n          </button>\r\n        </form>\r\n\r\n        {error && (\r\n          <div className=\"alert alert-danger mt-3\">\r\n            ‚ùå {error}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DiabeticPredictionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}